name: Python greetings delivery pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  VENV_NAME: greetings-env
  APP_PORT: 7001
  FLASK_DEBUG: "0"  # Disable Flask debug mode

jobs:
  install-pip-deps:
    runs-on: self-hosted
    steps:
      - name: Checkout pipeline repo
        uses: actions/checkout@v4
      
      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
          
      - name: Create and activate Python virtual environment
        run: |
          python -m venv ${{ env.VENV_NAME }}
          call ${{ env.VENV_NAME }}\Scripts\activate.bat
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
        shell: cmd
        working-directory: python-greetings

  deploy-to-dev:
    needs: install-pip-deps
    runs-on: self-hosted
    steps:
      - name: Checkout Pipeline repo
        uses: actions/checkout@v4

      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings
      
      - name: Verify Python virtual environment
        run: |
          call ${{ env.VENV_NAME }}\Scripts\activate.bat
          python --version
          python -m pip show flask
        shell: cmd
        working-directory: python-greetings

      - name: Stop existing dev service (if exists)
        run: pm2 delete greetings-app-dev & EXIT /B 0
        shell: cmd
        working-directory: python-greetings

      - name: Start dev service with virtual environment Python
        run: |
          set FLASK_DEBUG=${{ env.FLASK_DEBUG }}
          pm2 start app.py --name greetings-app-dev --interpreter "${{ github.workspace }}\python-greetings\${{ env.VENV_NAME }}\Scripts\python.exe" -- --port ${{ env.APP_PORT }}
        shell: cmd
        working-directory: python-greetings
              
      - name: Check service status
        run: pm2 logs greetings-app-dev --lines 20 --nostream
        shell: cmd
        working-directory: python-greetings

  tests-on-dev:
    needs: deploy-to-dev
    runs-on: self-hosted
    steps:
      - name: Checkout pipeline repo 
        uses: actions/checkout@v4

      - name: Checkout test framework repo
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: python-greetings-tests
      
      - name: Npm installation
        run: npm install
        working-directory: python-greetings-tests
        shell: cmd

      - name: Run tests
        run: npm run greetings greetings_dev
        working-directory: python-greetings-tests
        shell: cmd